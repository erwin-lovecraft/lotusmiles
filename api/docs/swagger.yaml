swagger: "2.0"
info:
  description: "API for AegisMiles mileage accrual system"
  version: "1.0"
  title: "AegisMiles API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    name: "API Support"
    url: "http://www.swagger.io/support"
    email: "support@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/api"
tags:
- name: "v1"
  description: "API v1 endpoints"
- name: "v2"
  description: "API v2 endpoints with SessionM integration"
schemes:
- "http"
paths:
  /v1/profile:
    get:
      tags:
      - "v1"
      summary: "Get customer profile"
      description: "Returns customer profile information"
      operationId: "getCustomerProfile"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Customer"
        "401":
          description: "Unauthorized"
      security:
      - BearerAuth: []
  /v1/accrual-requests:
    get:
      tags:
      - "v1"
      summary: "Get my accrual requests"
      description: "Returns a list of accrual requests for the current user"
      operationId: "getMyAccrualRequests"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        format: "int32"
      - name: "limit"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              data:
                type: "array"
                items:
                  $ref: "#/definitions/AccrualRequest"
              total:
                type: "integer"
                format: "int64"
        "401":
          description: "Unauthorized"
      security:
      - BearerAuth: []
    post:
      tags:
      - "v1"
      summary: "Submit accrual request"
      description: "Submit a new accrual request"
      operationId: "submitAccrualRequest"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Accrual request object"
        required: true
        schema:
          $ref: "#/definitions/AccrualRequestInput"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
        "400":
          description: "Invalid input"
        "401":
          description: "Unauthorized"
      security:
      - BearerAuth: []
  /v1/admin/accrual-requests:
    get:
      tags:
      - "v1"
      summary: "Get all accrual requests (admin)"
      description: "Returns a list of all accrual requests (admin only)"
      operationId: "getAccrualRequests"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        format: "int32"
      - name: "limit"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              data:
                type: "array"
                items:
                  $ref: "#/definitions/AccrualRequest"
              total:
                type: "integer"
                format: "int64"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
      security:
      - BearerAuth: []
  /v1/admin/accrual-requests/{id}/approve:
    patch:
      tags:
      - "v1"
      summary: "Approve accrual request (admin)"
      description: "Approve an accrual request (admin only)"
      operationId: "approveRequest"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Accrual request ID"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Approve request object"
        required: true
        schema:
          $ref: "#/definitions/ApproveRequestInput"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
        "400":
          description: "Invalid input"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
      security:
      - BearerAuth: []
  /v1/admin/accrual-requests/{id}/reject:
    patch:
      tags:
      - "v1"
      summary: "Reject accrual request (admin)"
      description: "Reject an accrual request (admin only)"
      operationId: "rejectRequest"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Accrual request ID"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Reject request object"
        required: true
        schema:
          $ref: "#/definitions/RejectedRequestInput"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
        "400":
          description: "Invalid input"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
      security:
      - BearerAuth: []
  /v1/miles-ledgers:
    get:
      tags:
      - "v1"
      summary: "Get my mileage ledgers"
      description: "Returns a list of mileage ledgers for the current user"
      operationId: "getMyMileageLedgers"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        format: "int32"
      - name: "limit"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              data:
                type: "array"
                items:
                  $ref: "#/definitions/MileageLedger"
              total:
                type: "integer"
                format: "int64"
        "401":
          description: "Unauthorized"
      security:
      - BearerAuth: []
  /v1/admin/miles-ledgers:
    get:
      tags:
      - "v1"
      summary: "Get all mileage ledgers (admin)"
      description: "Returns a list of all mileage ledgers (admin only)"
      operationId: "getMileageLedgers"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        format: "int32"
      - name: "limit"
        in: "query"
        description: "Number of items per page"
        required: false
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              data:
                type: "array"
                items:
                  $ref: "#/definitions/MileageLedger"
              total:
                type: "integer"
                format: "int64"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
      security:
      - BearerAuth: []
  /v2/profile:
    get:
      tags:
      - "v2"
      summary: "Get customer profile (v2)"
      description: "Returns customer profile information with SessionM integration"
      operationId: "getCustomerProfileV2"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Customer"
        "401":
          description: "Unauthorized"
      security:
      - BearerAuth: []
  /v2/profile/sessionm:
    get:
      tags:
      - "v2"
      summary: "Get SessionM profile"
      description: "Returns customer profile information from SessionM"
      operationId: "getSessionMProfile"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SessionMUserProfileResponse"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
      security:
      - BearerAuth: []
  /v2/accrual-requests:
    get:
      tags:
      - "v2"
      summary: "Get accrual requests (v2)"
      description: "Returns a list of accrual requests for the current user with SessionM integration"
      operationId: "getAccrualRequestsV2"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              data:
                type: "array"
                items:
                  $ref: "#/definitions/AccrualRequest"
              total:
                type: "integer"
                format: "int64"
        "401":
          description: "Unauthorized"
      security:
      - BearerAuth: []
    post:
      tags:
      - "v2"
      summary: "Submit accrual request (v2)"
      description: "Submit a new accrual request with SessionM integration"
      operationId: "submitAccrualRequestV2"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Accrual request object"
        required: true
        schema:
          $ref: "#/definitions/AccrualRequestInput"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
              id:
                type: "integer"
                format: "int64"
        "400":
          description: "Invalid input"
        "401":
          description: "Unauthorized"
      security:
      - BearerAuth: []
  /v2/admin/accrual-requests/{id}/approve:
    patch:
      tags:
      - "v2"
      summary: "Approve accrual request (admin, v2)"
      description: "Approve an accrual request with SessionM integration (admin only)"
      operationId: "approveRequestV2"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Accrual request ID"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Approve request object"
        required: true
        schema:
          $ref: "#/definitions/ApproveRequestInput"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
        "400":
          description: "Invalid input"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
      security:
      - BearerAuth: []
securityDefinitions:
  BearerAuth:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  Customer:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      qualifying_miles_total:
        type: "number"
        format: "double"
      bonus_miles_total:
        type: "number"
        format: "double"
      member_tier:
        type: "string"
      auth0_user_id:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      first_name:
        type: "string"
      last_name:
        type: "string"
      sessionm_user_id:
        type: "string"
      sessionm_external_id:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"
  AccrualRequest:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      customer_id:
        type: "integer"
        format: "int64"
      miles:
        type: "number"
        format: "double"
      miles_type:
        type: "string"
      description:
        type: "string"
      receipt_url:
        type: "string"
      status:
        type: "string"
      rejected_reason:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"
  AccrualRequestInput:
    type: "object"
    properties:
      miles:
        type: "number"
        format: "double"
      miles_type:
        type: "string"
      description:
        type: "string"
      receipt_url:
        type: "string"
    required:
      - "miles"
      - "miles_type"
      - "description"
  ApproveRequestInput:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
    required:
      - "id"
  RejectedRequestInput:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      rejected_reason:
        type: "string"
    required:
      - "id"
      - "rejected_reason"
  MileageLedger:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      customer_id:
        type: "integer"
        format: "int64"
      miles:
        type: "number"
        format: "double"
      miles_type:
        type: "string"
      description:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
  SessionMUserProfileResponse:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/SessionMUserProfile"
  SessionMUserProfile:
    type: "object"
    properties:
      id:
        type: "string"
      external_id:
        type: "string"
      email:
        type: "string"
      first_name:
        type: "string"
      last_name:
        type: "string"
      phone_numbers:
        type: "array"
        items:
          type: "object"
          properties:
            phone_number:
              type: "string"
            phone_type:
              type: "string"
            preference_flags:
              type: "array"
              items:
                type: "string"
      points_balance:
        type: "integer"
        format: "int32"
      tier:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"