// Code generated by mockery v2.53.0. DO NOT EDIT.

package lit

import mock "github.com/stretchr/testify/mock"

// MockRouterOption is an autogenerated mock type for the RouterOption type
type MockRouterOption struct {
	mock.Mock
}

type MockRouterOption_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRouterOption) EXPECT() *MockRouterOption_Expecter {
	return &MockRouterOption_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: _a0
func (_m *MockRouterOption) Execute(_a0 Router) {
	_m.Called(_a0)
}

// MockRouterOption_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockRouterOption_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - _a0 Router
func (_e *MockRouterOption_Expecter) Execute(_a0 interface{}) *MockRouterOption_Execute_Call {
	return &MockRouterOption_Execute_Call{Call: _e.mock.On("Execute", _a0)}
}

func (_c *MockRouterOption_Execute_Call) Run(run func(_a0 Router)) *MockRouterOption_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(Router))
	})
	return _c
}

func (_c *MockRouterOption_Execute_Call) Return() *MockRouterOption_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRouterOption_Execute_Call) RunAndReturn(run func(Router)) *MockRouterOption_Execute_Call {
	_c.Run(run)
	return _c
}

// NewMockRouterOption creates a new instance of MockRouterOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRouterOption(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRouterOption {
	mock := &MockRouterOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
